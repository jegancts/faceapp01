{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/examcomplete/examcomplete.component.ts","webpack:///src/app/examcomplete/examcomplete.component.html","webpack:///src/app/exammenu/exammenu.component.ts","webpack:///src/app/exammenu/exammenu.component.html","webpack:///src/app/exampage/exampage.component.ts","webpack:///src/app/exampage/exampage.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/invpage/invpage.component.ts","webpack:///src/app/invpage/invpage.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","ExamcompleteComponent","http","data","JSON","stringify","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","console","log","responseText","open","setRequestHeader","send","ExammenuComponent","router","navigate","startExam","ExampageComponent","pictureTaken","showWebcam","multipleWebcamsAvailable","videoOptions","width","ideal","height","errors","webcamImage","outimg","trigger","socket","transports","getAvailableVideoInputs","mediaDevices","length","socketcontinue","on","message","intervalHandle","setInterval","next","emit","imageAsBase64","headers","post","img","subscribe","res","valid","alert","error","push","clearInterval","asObservable","completeExam","HeaderComponent","HomeComponent","route","username","emailAdr","password","signUpButton","document","getElementById","signInButton","container","classList","add","remove","body","className","preventDefault","info","fd","FormData","append","loginResponse","event","target","files","file","signupFile","window","location","reload","onSelectSignupFile","signup","triggerSnapshot","login","InvpageComponent","disconnect","disconnectall","ProfileComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { ExamcompleteComponent } from './examcomplete/examcomplete.component';\r\nimport { ExammenuComponent } from './exammenu/exammenu.component';\r\nimport { ExampageComponent } from './exampage/exampage.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { InvpageComponent } from './invpage/invpage.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'examcomplete', component: ExamcompleteComponent },\r\n  { path: 'exammenu', component: ExammenuComponent },\r\n  { path: 'exampage', component: ExampageComponent },\r\n  { path: 'invpage', component: InvpageComponent },\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'app', component: AppComponent },\r\n  { path: '', pathMatch: 'full', component: HomeComponent },\r\n  { path: '**', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    useHash: false\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ViewChild, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent{\n  title = 'angular-facial-recog';\n\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { ExammenuComponent } from './exammenu/exammenu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ExampageComponent } from './exampage/exampage.component';\r\nimport { ExamcompleteComponent } from './examcomplete/examcomplete.component';\r\nimport { InvpageComponent } from './invpage/invpage.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { WebcamModule } from 'ngx-webcam';\r\nimport { AppRoutingModule } from './app-routing.module';\nimport { HeaderComponent } from './header/header.component';\nimport { ProfileComponent } from './profile/profile.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ExammenuComponent,\r\n    HomeComponent,\r\n    ExampageComponent,\r\n    ExamcompleteComponent,\r\n    InvpageComponent,\r\n    HeaderComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    WebcamModule,\r\n    AppRoutingModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-examcomplete',\n  templateUrl: './examcomplete.component.html',\n  styleUrls: ['./examcomplete.component.scss']\n})\nexport class ExamcompleteComponent implements OnInit {\n\n  constructor(private http: HttpClient) { }\n\n  blockChain: string;\n\n\n  ngOnInit() {\n    var data = JSON.stringify({ \"canonicalId\": \"HarryPotter\", \"claims\": [{ \"key\": \"nam\", \"value\": \"HarryPotter\" }, { \"key\": \"dgr\", \"value\": \"Knowledge of Magic\" }, { \"key\": \"rnk\", \"value\": \"A1\" }, { \"key\": \"iss\", \"value\": \"Ministry of Magic\" }] });\n\n    var xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n\n    xhr.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === 4) {\n        console.log(this.responseText);\n      }\n    });\n\n    xhr.open(\"POST\", \"http://44.233.202.250:8080/v1/verifiableCredential\");\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.setRequestHeader(\"Accept\", \"text/plain\");\n\n    xhr.send(data);\n  }\n\n}\n","<app-header></app-header>\n<div class=\"container-fluid m-0 p-0\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <embed src=\"assets/CertificateOfMagic.pdf\" width=\"100%\" height=\"800px\" type=\"application/pdf\">\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-exammenu',\n  templateUrl: './exammenu.component.html',\n  styleUrls: ['./exammenu.component.scss']\n})\nexport class ExammenuComponent {\n\n  constructor(private router: Router) { }\n\n  startExam() {\n    this.router.navigate(['exampage']);\n  }\n}\n","<app-header></app-header>\n<form>\n  <fieldset>\n    <legend>Please select your exam</legend>\n    <input type=\"radio\" id=\"radio1\" name=\"radios\" checked>\n    <label for=\"radio1\">Introduction to Myths and Magic Part 1 : Final Exam</label><br>\n    <input type=\"radio\" id=\"radio2\" name=\"radios\">\n    <label for=\"radio2\">The general knowledge exam of magic and the strange world</label><br>\n    <input type=\"radio\" id=\"radio3\" name=\"radios\">\n    <label for=\"radio3\">Advance study : Potion Masterclass Exam</label>\n  </fieldset>\n  <button (click)=\"startExam()\">Submit</button>\n</form>\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject, Observable } from 'rxjs';\nimport { WebcamImage, WebcamInitError, WebcamUtil } from 'ngx-webcam';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as io from 'socket.io-client';\n\n@Component({\n  selector: 'app-exampage',\n  templateUrl: './exampage.component.html',\n  styleUrls: ['./exampage.component.scss']\n})\nexport class ExampageComponent implements OnInit {\n  public socket: any\n  public pictureTaken = new EventEmitter<WebcamImage>();\n  public imagestr: any;\n  public showWebcam = true;\n  public multipleWebcamsAvailable = false;\n  public deviceId: string;\n  public returnval: string;\n  public intervalHandle: any;\n  public videoOptions: MediaTrackConstraints = {\n    width: { ideal: 160 },\n    height: { ideal: 120 }\n  };\n  public width: number = 100;\n  public height: number = 100;\n  public errors: WebcamInitError[] = [];\n  public webcamImage: WebcamImage = null;\n  public outimg: string = '';\n  private trigger: Subject<void> = new Subject<void>();\n  loginResponse: string;\n\n  constructor(private router: Router, private http: HttpClient) {\n    this.socket = io('http://localhost:5000', { transports: ['polling'] });\n  }\n  public ngOnInit(): void {\n    WebcamUtil.getAvailableVideoInputs()\n      .then((mediaDevices: MediaDeviceInfo[]) => {\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      }).then(() => {\n        this.socketcontinue();\n      });\n  };\n  public handleImage(webcamImage: WebcamImage): void {\n    this.webcamImage = webcamImage;\n  };\n  public socketcontinue(): void {\n    this.socket.on('image_out', (message) => {\n      this.outimg = \"data:image/png;base64,\" + message;\n    })\n    this.intervalHandle = setInterval(() => {\n      this.trigger.next();\n      this.socket.emit('image', this.webcamImage.imageAsBase64);\n    }, 40);\n  };\n  public postcontinue(): void {\n    this.intervalHandle =\n      setInterval(() => {\n        this.trigger.next();\n        let headers = new HttpHeaders({\n          'Content-Type': 'application/json'\n        });\n        this.http.post(\"http://localhost:5000/videoStreaming\", { img: this.webcamImage.imageAsBase64 }, { headers }).subscribe((res: any) => {\n          //this.loginResponse = JSON.stringify(res)\n          //  alert(this.loginResponse);  \n          if (res.valid === false) {\n            alert(res.error);\n          }\n          console.log(res);\n\n        })\n      }, 40); // currently interval is set for every 5 seconds.\n  };\n  public handleInitError(error: WebcamInitError): void {\n    this.errors.push(error);\n  };\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  };\n  completeExam() {\n    console.log('in the complete')\n    clearInterval(this.intervalHandle);\n    this.trigger.next();\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    // this.http.post(\"http://localhost:5000/videoStreamingClose\", { img: this.webcamImage.imageAsBase64 }, {headers }).subscribe((res:any) => {\n    //this.loginResponse = JSON.stringify(res)\n    //  alert(this.loginResponse);  \n    // if (res.valid === false){\n    //   alert(res.error);\n    // }\n    //console.log(res);\n    //});\n\n    // this.socket.emit('disconnect');\n    // this.socket.disconnect();\n\n    this.router.navigate(['examcomplete']);\n  };\n\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <form>\n        <fieldset>\n          <legend>Which of the following is a real spell</legend>\n          <input type=\"radio\" id=\"radio1\" name=\"radios\" checked>\n          <label for=\"radio1\">Hocis Pocis</label><br>\n          <input type=\"radio\" id=\"radio2\" name=\"radios\">\n          <label for=\"radio2\">Ablakazam</label><br>\n          <input type=\"radio\" id=\"radio3\" name=\"radios\">\n          <label for=\"radio3\">Lumos</label>\n        </fieldset>\n        <fieldset>\n          <legend>What is the name of a person without magic</legend>\n          <input type=\"radio\" id=\"radio4\" name=\"radios1\" checked>\n          <label for=\"radio1\">Moggel</label><br>\n          <input type=\"radio\" id=\"radio5\" name=\"radios1\">\n          <label for=\"radio2\">Mogel</label><br>\n          <input type=\"radio\" id=\"radio6\" name=\"radios1\">\n          <label for=\"radio3\">Muggle</label>\n        </fieldset>\n        <fieldset>\n          <legend>Which bird rises from the ashes</legend>\n          <input type=\"radio\" id=\"radio7\" name=\"radios2\" checked>\n          <label for=\"radio7\">Pegasus</label><br>\n          <input type=\"radio\" id=\"radio8\" name=\"radios2\">\n          <label for=\"radio8\">Pheonix</label><br>\n          <input type=\"radio\" id=\"radio9\" name=\"radios2\">\n          <label for=\"radio9\">Dragon Dove</label>\n        </fieldset>\n        <button (click)=\"completeExam()\">Submit Answers</button>\n      </form>\n    </div>\n    <div class=\"col-sm-4\">\n      <div class=\"py-4 text-center\">\n        <h5>Webcam preview</h5>\n        <webcam [height]=\"320\" [width]=\"240\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\"\n          *ngIf=\"showWebcam\" [videoOptions]=\"videoOptions\" (initError)=\"handleInitError($event)\"></webcam>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\"><img src=\"assets/images/hog2.png\"></a>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/\">Home</a></li>\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/profile\">Profile</a></li>\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/exammenu\">Exam List</a></li>\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/invpage\">Invigilator Page</a></li>\n        </ul>\n        <ul class=\"nav navbar-nav navbar-right\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/\"><span class=\"glyphicon glyphicon-log-out\"></span>Logout</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { WebcamImage, WebcamInitError } from 'ngx-webcam';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public webcamImage: WebcamImage = null;\r\n  private trigger: Subject<void> = new Subject<void>();\r\n  public pictureTaken = new EventEmitter<WebcamImage>();\r\n  public errors: WebcamInitError[] = [];\r\n  public showWebcam = true;\r\n  file: File\r\n  signupFile: File\r\n  username: string = \"\";\r\n  emailAdr: string = \"\";\r\n  password: string = \"\";\r\n  loginResponse: string;\r\n\r\n  constructor(private route: Router, private http: HttpClient) {\r\n  }\r\n  ngOnInit() {\r\n    const signUpButton = document.getElementById('signUp');\r\n    const signInButton = document.getElementById('signIn');\r\n    const container = document.getElementById('container');\r\n\r\n    signUpButton.addEventListener('click', () => container.classList.add('right-panel-active')\r\n    );\r\n    signInButton.addEventListener('click', () => container.classList.remove('right-panel-active')\r\n    );\r\n\r\n    var body = document.body;\r\n\r\n    signUpButton.addEventListener('click', function (e) {\r\n      body.className = body.className ? '' : 'with_nav';\r\n      e.preventDefault();\r\n    });\r\n\r\n\r\n\r\n\r\n  }\r\n  public triggerSnapshot(): void {\r\n    this.trigger.next();\r\n  }\r\n  public handleImage(webcamImage: WebcamImage): void {\r\n    console.info('received webcam image', webcamImage.imageAsBase64);\r\n    //this.pictureTaken.emit(webcamImage);\r\n    //this.webcamImage = webcamImage\r\n    //img.crossOrigin = 'Anonymous';\r\n    //img.src = webcamImage;\r\n    var fd = new FormData();\r\n    fd.append('imageFile', webcamImage.imageAsBase64);\r\n    fd.append('userId', this.username);\r\n    this.http.post<any>('http://localhost:8080/ca/facialRecognition', fd).subscribe(data => {\r\n      this.loginResponse = data.message;\r\n      if (this.loginResponse == 'Facial Recognition Successful') {\r\n        alert(this.loginResponse)\r\n        this.route.navigate(['exammenu']);\r\n      } else {\r\n        alert(this.loginResponse)\r\n      }\r\n    })\r\n  }\r\n  public handleInitError(error: WebcamInitError): void {\r\n    this.errors.push(error);\r\n  }\r\n  public get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n  onSelectFile(event) {\r\n    console.log(\"login\" + event.target.files[0]);\r\n    this.file = event.target.files[0]\r\n  }\r\n  onSelectSignupFile(event) {\r\n    console.log(\"signupfile\" + event.target.files[0]);\r\n    this.signupFile = event.target.files[0]\r\n  }\r\n  signup() {\r\n    var fd = new FormData();\r\n    fd.append('imageFile', this.signupFile);\r\n    fd.append('userId', this.emailAdr);\r\n    fd.append('password', this.password);\r\n    this.http.post<any>('http://localhost:8080/ca/register', fd).subscribe(data => {\r\n      this.loginResponse = data.message;\r\n      alert(this.loginResponse);\r\n      window.location.reload();\r\n    })\r\n\r\n  }\r\n  login() {\r\n  }\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.10.2/css/all.css\">\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n<div class=\"container\" id=\"container\">\n  <div class=\"form-container sign-up-container\">\n    <form action=\"#\">\n      <div class=\"social-container\">\n        <img src=\"assets/images/hog.png\" style=\"width:300px;height:230px;\">\n      </div>\n      <h1>Create Account</h1>\n      <input type=\"text\" placeholder=\"First Name\"/>\n      <input type=\"text\" placeholder=\"Last Name\"/>\n      <input [(ngModel)]=\"emailAdr\" [ngModelOptions]=\"{standalone: true}\" type=\"email\" placeholder=\"Email\"/>\n      <input [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" type=\"password\" placeholder=\"Password\"/>\n      <label for=\"img1\">Please upload document ID:</label>\n      <input (change)=\"onSelectSignupFile($event)\" type=\"file\" id=\"img1\" name=\"img\" accept=\"image/*\">\n      <button (click)=\"signup()\"class=\"su\">Sign Up</button>\n    </form>\n  </div>\n  <div class=\"form-container sign-in-container\">\n    <form action=\"#\">\n      <div class=\"social-container\">\n        <img src=\"assets/images/hog.png\" style=\"width:300px;height:230px;\">\n      </div>\n      <input id=\"username\"  [(ngModel)]=\"username\" [ngModelOptions]=\"{standalone: true}\" type=\"text\"  placeholder=\"Email\" />\n      <input type=\"password\" placeholder=\"Password\"/>\n      <label>Capture or Select image for facial recognition</label>\n      <!--<input type='file' (change)=\"onSelectFile($event)\">-->\n      <!--div style=\"text-align:center\">-->\n      <div>\n        <webcam [height]=\"275\" [width]=\"275\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\" *ngIf=\"showWebcam\"\n                (initError)=\"handleInitError($event)\"></webcam>\n        <br/>\n\n        <div class=\"actionBtn\" (click)=\"triggerSnapshot();\" title=\"Take Picture\"></div>\n        <!--<div class=\"actionBtn\" (click)=\"showNextWebcam(true);\" title=\"Switch Camera\">🔁</div>-->\n      </div>\n      <a>I Forgot my Password</a>\n      <button class=\"actionBtn\" (click)=\"triggerSnapshot();\" title=\"Take Picture\" (click)=\"login()\" class=\"si\">Sign In\n      </button>\n    </form>\n  </div>\n  <div class=\"overlay-container\">\n    <div class=\"overlay\">\n      <div class=\"overlay-panel overlay-left\">\n        <h1>Welcome Back!</h1>\n        <p>Please login to view you Cambridge Assessments account</p>\n        <button class=\"ghost\" id=\"signIn\">Sign In</button>\n      </div>\n      <div class=\"overlay-panel overlay-right\">\n        <h1>Sign up</h1>\n        <p>Enter your personal details and start journey with us</p>\n        <button class=\"ghost\" id=\"signUp\">Sign Up</button>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n","import { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as io from 'socket.io-client';\r\n\r\n@Component({\r\n  selector: 'app-invpage',\r\n  templateUrl: './invpage.component.html',\r\n  styleUrls: ['./invpage.component.scss']\r\n})\r\nexport class InvpageComponent implements OnInit {\r\n  public socket: any;\r\n  public outimg : string = '';\r\n\r\n  constructor(private router: Router, private http: HttpClient) {\r\n    this.socket = io('http://localhost:5000', { transports: ['polling'] })\r\n  }\r\n\r\n  public ngOnInit(): void { \r\n    this.socket.on('image_out', (message) => {\r\n      this.outimg = \"data:image/png;base64,\"+message;\r\n    })\r\n  }\r\n\r\n  public disconnectall(): void {\r\n    console.log('disconnectall');\r\n    this.socket.emit('disconnect');\r\n    this.socket.disconnect();\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 text-center\">\r\n      <h3 class=\"mt-5\">Inv Page</h3>\r\n      <img [src]=\"outimg\" width=\"320px\" height=\"240px\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 text-center\">\r\n      <button (click)=\"disconnectall()\">close</button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <h3>Profile Page</h3>\n        </div>\n    </div>\n</div>\n","export const environment = {\n  production: false\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}